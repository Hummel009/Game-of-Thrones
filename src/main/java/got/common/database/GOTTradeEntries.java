package got.common.database;

import java.util.*;

import got.common.GOTConfig;
import got.common.enchant.GOTEnchantmentHelper;
import got.common.entity.other.*;
import got.common.item.other.GOTItemMug;
import net.minecraft.init.*;
import net.minecraft.item.ItemStack;
import net.minecraft.util.MathHelper;

public class GOTTradeEntries {
	public static GOTTradeEntries COMMON_BAKER_SELL;
	public static GOTTradeEntries COMMON_BARTENDER_SELL;
	public static GOTTradeEntries COMMON_BLACKSMITH_SELL;
	public static GOTTradeEntries COMMON_BOMZH_SELL;
	public static GOTTradeEntries COMMON_BREWER_SELL;
	public static GOTTradeEntries COMMON_BUTCHER_SELL;
	public static GOTTradeEntries COMMON_FARMER_SELL;
	public static GOTTradeEntries COMMON_FISHMONGER_SELL;
	public static GOTTradeEntries COMMON_FLORIST_SELL;
	public static GOTTradeEntries COMMON_GOLDSMITH_SELL;
	public static GOTTradeEntries COMMON_HUNTER_SELL;
	public static GOTTradeEntries COMMON_LUMBERMAN_SELL;
	public static GOTTradeEntries COMMON_MAESTER_SELL;
	public static GOTTradeEntries COMMON_MASON_SELL;
	public static GOTTradeEntries COMMON_MINER_SELL;
	public static GOTTradeEntries COMMON_SHAMAN_SELL;

	public static GOTTradeEntries ASSHAI_ALCHEMIST_BUY;
	public static GOTTradeEntries BAELISH_BUY;
	public static GOTTradeEntries COMMON_BAKER_BUY;
	public static GOTTradeEntries COMMON_BOMZH_BUY;
	public static GOTTradeEntries COMMON_BREWER_BUY;
	public static GOTTradeEntries COMMON_BUTCHER_BUY;
	public static GOTTradeEntries COMMON_FARMER_BUY;
	public static GOTTradeEntries COMMON_FISHMONGER_BUY;
	public static GOTTradeEntries COMMON_GOLDSMITH_BUY;
	public static GOTTradeEntries COMMON_MAESTER_BUY;
	public static GOTTradeEntries COMMON_MINER_BUY;
	public static GOTTradeEntries CROWNLANDS_ALCHEMIST_BUY;
	public static GOTTradeEntries DAVOS_BUY;
	public static GOTTradeEntries ESSOS_BARTENDER_BUY;
	public static GOTTradeEntries ESSOS_BLACKSMITH_BUY;
	public static GOTTradeEntries ESSOS_FLORIST_BUY;
	public static GOTTradeEntries ESSOS_HUNTER_BUY;
	public static GOTTradeEntries ESSOS_LUMBERMAN_BUY;
	public static GOTTradeEntries ESSOS_MASON_BUY;
	public static GOTTradeEntries LHAZAR_BLACKSMITH_BUY;
	public static GOTTradeEntries QOHOR_BLACKSMITH_BUY;
	public static GOTTradeEntries SOTHORYOS_BLACKSMITH_BUY;
	public static GOTTradeEntries SOTHORYOS_SHAMAN_BUY;
	public static GOTTradeEntries SUMMER_BLACKSMITH_BUY;
	public static GOTTradeEntries THENN_BLACKSMITH_BUY;
	public static GOTTradeEntries WESTEROS_BARTENDER_BUY;
	public static GOTTradeEntries WESTEROS_BLACKSMITH_BUY;
	public static GOTTradeEntries WESTEROS_FLORIST_BUY;
	public static GOTTradeEntries WESTEROS_GREENGROCER_BUY;
	public static GOTTradeEntries WESTEROS_LUMBERMAN_BUY;
	public static GOTTradeEntries WESTEROS_MASON_BUY;
	public static GOTTradeEntries YITI_BARTENDER_BUY;
	public static GOTTradeEntries YITI_BLACKSMITH_BUY;
	public static GOTTradeEntries YITI_HUNTER_BUY;
	public static GOTTradeEntries YITI_LUMBERMAN_BUY;
	public static GOTTradeEntries YITI_MASON_BUY;
	public static GOTTradeEntries MOSSOVY_BLACKSMITH_BUY;

	public static int VALYRIAN_INGOT_SELL = 512;
	public static int VALYRIAN_NUGGET_SELL = 64;
	public static int GOLD_INGOT_SELL = 128;
	public static int GOLD_NUGGET_SELL = 16;
	public static int SILVER_INGOT_SELL = 32;
	public static int SILVER_NUGGET_SELL = 4;

	public static int VALYRIAN_INGOT_BUY = 768;
	public static int VALYRIAN_NUGGET_BUY = 96;
	public static int GOLD_INGOT_BUY = 192;
	public static int GOLD_NUGGET_BUY = 24;
	public static int SILVER_INGOT_BUY = 48;
	public static int SILVER_NUGGET_BUY = 6;

	static {
		COMMON_BAKER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.wheat, 2), 1), new GOTTradeEntry(new ItemStack(Items.sugar, 2), 1), new GOTTradeEntry(new ItemStack(Items.egg, 2), 1), new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.water_bucket), 4), new GOTTradeEntry(new ItemStack(Items.milk_bucket), 4), new GOTTradeEntry(new ItemStack(Items.apple), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.appleGreen), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.cherry), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.lemon), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.olive), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.almond), 2), new GOTTradeEntry(new ItemStack(Items.dye, 1, 3), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.salt), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.clayPlate), 1));
		COMMON_BARTENDER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.beef), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.pipeweed, 3), 10), new GOTTradeEntry(new ItemStack(Items.porkchop), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.muttonRaw), 3), new GOTTradeEntry(new ItemStack(Items.chicken), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitRaw), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.deerRaw), 3), new GOTTradeEntry(new ItemStack(Items.fish), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.clayMug), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.clayPlate), 1), new GOTTradeEntry(new ItemStack(Items.potato, 2), 1), new GOTTradeEntry(new ItemStack(Items.wheat, 2), 1), new GOTTradeEntry(new ItemStack(Items.apple), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.appleGreen), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.date), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.orange), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.lemon), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.lime), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.salt), 10), new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.water_bucket), 4), new GOTTradeEntry(new ItemStack(Items.coal, 2, 32767), 1));
		COMMON_BLACKSMITH_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.iron_ingot), 3), new GOTTradeEntry(new ItemStack(Items.coal, 2, 32767), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.copperIngot), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.tinIngot), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeIngot), 3), new GOTTradeEntry(new ItemStack(Items.string, 3), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.diamond), 25), new GOTTradeEntry(new ItemStack(GOTRegistry.sapphire), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.pearl), 25), new GOTTradeEntry(new ItemStack(Items.leather), 2));
		COMMON_BOMZH_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.iron_ingot), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.pipeweed, 3), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.copperIngot), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.tinIngot), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeIngot), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.diamond), 25), new GOTTradeEntry(new ItemStack(GOTRegistry.emerald), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.sapphire), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.ruby), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.opal), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.amber), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.amethyst), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.topaz), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.pearl), 25), new GOTTradeEntry(new ItemStack(Items.coal, 2, 32767), 1), new GOTTradeEntry(new ItemStack(Items.leather), 2), new GOTTradeEntry(new ItemStack(Items.string, 3), 1), new GOTTradeEntry(new ItemStack(Items.stick, 8), 1), new GOTTradeEntry(new ItemStack(Items.flint), 1), new GOTTradeEntry(new ItemStack(Items.rotten_flesh), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.fur), 2), new GOTTradeEntry(new ItemStack(Items.wheat_seeds, 2), 1), new GOTTradeEntry(new ItemStack(Items.feather), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.chestnut, 2), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.partyHat, 1, 32767), 100));
		COMMON_BREWER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Blocks.cactus), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.appleGreen), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.banana), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.cherry), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.date), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.grapeRed), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.grapeWhite), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.lemon), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.lime), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.mango), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.orange), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.pear), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.plum), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.pomegranate), 2), new GOTTradeEntry(new ItemStack(Items.apple), 1), new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.carrot), 1), new GOTTradeEntry(new ItemStack(Items.melon, 2), 1), new GOTTradeEntry(new ItemStack(Items.milk_bucket), 4), new GOTTradeEntry(new ItemStack(Items.potato), 1), new GOTTradeEntry(new ItemStack(Items.sugar, 2), 1), new GOTTradeEntry(new ItemStack(Items.water_bucket), 4), new GOTTradeEntry(new ItemStack(Items.wheat, 2), 1));
		COMMON_BUTCHER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(GOTRegistry.ironDagger), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeDagger), 3), new GOTTradeEntry(new ItemStack(Items.iron_ingot), 3), new GOTTradeEntry(new ItemStack(Items.lead), 4), new GOTTradeEntry(new ItemStack(Items.wheat, 3), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.salt), 10));
		COMMON_FARMER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.water_bucket), 4), new GOTTradeEntry(new ItemStack(Items.iron_hoe), 8), new GOTTradeEntry(new ItemStack(Items.stone_hoe), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeHoe), 6), new GOTTradeEntry(new ItemStack(Items.dye, 6, 15), 1));
		COMMON_FISHMONGER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.stick, 8), 1), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 0), 1), new GOTTradeEntry(new ItemStack(Items.string, 3), 1), new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.iron_ingot), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.ironDagger), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeDagger), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.salt), 10));
		COMMON_FLORIST_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.water_bucket), 4), new GOTTradeEntry(new ItemStack(Items.iron_hoe), 8), new GOTTradeEntry(new ItemStack(Items.stone_hoe), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeHoe), 6), new GOTTradeEntry(new ItemStack(Items.dye, 6, 15), 1));
		COMMON_GOLDSMITH_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianIngot), VALYRIAN_INGOT_SELL), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianNugget), VALYRIAN_NUGGET_SELL), new GOTTradeEntry(new ItemStack(Items.gold_ingot), GOLD_INGOT_SELL), new GOTTradeEntry(new ItemStack(Items.gold_nugget), GOLD_NUGGET_SELL), new GOTTradeEntry(new ItemStack(GOTRegistry.silverIngot), SILVER_INGOT_SELL), new GOTTradeEntry(new ItemStack(GOTRegistry.silverNugget), SILVER_NUGGET_SELL), new GOTTradeEntry(new ItemStack(GOTRegistry.diamond), 25), new GOTTradeEntry(new ItemStack(GOTRegistry.emerald), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.sapphire), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.ruby), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.opal), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.amber), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.amethyst), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.topaz), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.pearl), 25));
		COMMON_HUNTER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(GOTRegistry.ironDagger), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeDagger), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.ironSpear), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeSpear), 5), new GOTTradeEntry(new ItemStack(Items.arrow, 4), 2), new GOTTradeEntry(new ItemStack(Items.stick, 8), 1), new GOTTradeEntry(new ItemStack(Items.string, 3), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.bottlePoison), 10));
		COMMON_LUMBERMAN_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.water_bucket), 4), new GOTTradeEntry(new ItemStack(Items.iron_axe), 8), new GOTTradeEntry(new ItemStack(Items.stone_axe), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeAxe), 6), new GOTTradeEntry(new ItemStack(Items.dye, 6, 15), 1), new GOTTradeEntry(new ItemStack(Items.shears), 5));
		COMMON_MAESTER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.writable_book, 1), 1), new GOTTradeEntry(new ItemStack(Items.paper, 2), 1), new GOTTradeEntry(new ItemStack(Items.saddle), 1), new GOTTradeEntry(new ItemStack(Items.flint_and_steel), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.bottlePoison), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sulfurMatch), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPlantainBrew), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPoppyMilk), 6));
		COMMON_MASON_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.iron_pickaxe), 8), new GOTTradeEntry(new ItemStack(Items.stone_pickaxe), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzePickaxe), 6), new GOTTradeEntry(new ItemStack(Items.coal, 2, 32767), 1), new GOTTradeEntry(new ItemStack(Blocks.torch, 16), 2), new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.water_bucket), 4), new GOTTradeEntry(new ItemStack(Items.bread), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.oliveBread), 3), new GOTTradeEntry(new ItemStack(Items.cooked_beef), 3), new GOTTradeEntry(new ItemStack(Items.cooked_porkchop), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.muttonCooked), 3), new GOTTradeEntry(new ItemStack(Items.cooked_chicken), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitCooked), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.deerCooked), 3));
		COMMON_MINER_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(Items.bucket), 3), new GOTTradeEntry(new ItemStack(Items.iron_pickaxe), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzePickaxe), 6), new GOTTradeEntry(new ItemStack(Items.stone_pickaxe), 1), new GOTTradeEntry(new ItemStack(Blocks.torch, 16), 2));
		COMMON_SHAMAN_SELL = new GOTTradeEntries(GOTTradeEntries.TradeType.SELL, new GOTTradeEntry(new ItemStack(GOTRegistry.obsidianShard), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.emerald), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.amber), 10), new GOTTradeEntry(new ItemStack(Items.glass_bottle), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.mug), 1), new GOTTradeEntry(new ItemStack(Items.bone), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.rhinoHorn), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.gemsbokHorn), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 2, 2), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 2, 3), 1), new GOTTradeEntry(new ItemStack(Blocks.red_mushroom, 1, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.brown_mushroom, 1, 0), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.mango), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.banana), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.corn, 2), 1));

		COMMON_BAKER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.bread), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.cornBread), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.oliveBread), 6), new GOTTradeEntry(new ItemStack(Items.cake), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.lemonCakeItem), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.appleCrumbleItem), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.berryPieItem), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.cherryPieItem), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.marzipan), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.marzipanChocolate), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.marzipanBlock), 20), new GOTTradeEntry(new ItemStack(Items.cookie), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.plate), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.ceramicPlate), 2));
		COMMON_BOMZH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.saltedFlesh), 7));
		COMMON_BREWER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.mugAle, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugAppleJuice), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.mugAraq, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugBananaBeer, 1, 9999), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.mugBlackberryJuice), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.mugBlueberryJuice), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCactusLiqueur, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCarrotWine, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCherryLiqueur, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugChocolate), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCider, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCranberryJuice), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.mugElderberryJuice), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.mugLemonLiqueur, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugLimeLiqueur, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugMangoJuice), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugMead, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugMead, 1, 9999), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.mugMelonLiqueur, 1, 9999), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.mugOrangeJuice), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPerry, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPlumKvass, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPomegranateJuice), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPomegranateWine, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugRaspberryJuice), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.mugRedGrapeJuice), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugRedWine, 1, 9999), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.mugSourMilk, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugVodka, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugWhiteGrapeJuice), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugWhiteWine, 1, 9999), 15), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugAle, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugAraq, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugCactusLiqueur, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugCarrotWine, 1, 2), 140), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugCherryLiqueur, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugCider, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugLemonLiqueur, 1, 2), 140), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugLimeLiqueur, 1, 2), 140), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugMead, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugPerry, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugPlumKvass, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugPomegranateWine, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugRedWine, 1, 2), 160), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugSourMilk, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugVodka, 1, 2), 120), new GOTTradeEntryBarrel(new ItemStack(GOTRegistry.mugWhiteWine, 1, 2), 160));
		COMMON_BUTCHER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.beef), 5), new GOTTradeEntry(new ItemStack(Items.porkchop), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.gammon), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.muttonRaw), 5), new GOTTradeEntry(new ItemStack(Items.chicken), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitRaw), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.deerRaw), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.camelRaw), 8), new GOTTradeEntry(new ItemStack(Items.leather), 3), new GOTTradeEntry(new ItemStack(Items.feather), 3));
		COMMON_FARMER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Blocks.hay_block), 12), new GOTTradeEntry(new ItemStack(Blocks.melon_block), 18), new GOTTradeEntry(new ItemStack(Blocks.wool), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.almond), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.banana), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.brandingIron), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.corn), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.cornStalk), 1), new GOTTradeEntry(new ItemStack(GOTRegistry.driedReeds), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.grapeRed), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.grapeWhite), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leek), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.lemon), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.lettuce), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.lime), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.mango), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.orange), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.pipeweedPlant), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.plum), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.pomegranate), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.reeds), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.turnip), 3), new GOTTradeEntry(new ItemStack(Items.carrot), 3), new GOTTradeEntry(new ItemStack(Items.dye, 1, 3), 8), new GOTTradeEntry(new ItemStack(Items.lead), 8), new GOTTradeEntry(new ItemStack(Items.melon), 2), new GOTTradeEntry(new ItemStack(Items.milk_bucket), 8), new GOTTradeEntry(new ItemStack(Items.potato), 2), new GOTTradeEntry(new ItemStack(Items.wheat), 2), new GOTTradeEntry(new ItemStack(Items.wheat_seeds), 1));
		COMMON_FISHMONGER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.fish, 1, 0), 4), new GOTTradeEntry(new ItemStack(Items.fish, 1, 1), 6), new GOTTradeEntry(new ItemStack(Items.fish, 1, 2), 8), new GOTTradeEntry(new ItemStack(Items.fish, 1, 3), 12), new GOTTradeEntry(new ItemStack(Items.fishing_rod), 8), new GOTTradeEntry(new ItemStack(Items.boat), 5), new GOTTradeEntry(new ItemStack(Items.dye, 1, 0), 4), new GOTTradeEntry(new ItemStack(Blocks.sponge), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.pearl), 50), new GOTTradeEntry(new ItemStack(Items.leather_boots), 5));
		COMMON_GOLDSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianIngot), VALYRIAN_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianNugget), VALYRIAN_NUGGET_BUY), new GOTTradeEntry(new ItemStack(Items.gold_ingot), GOLD_INGOT_BUY), new GOTTradeEntry(new ItemStack(Items.gold_nugget), GOLD_NUGGET_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.silverIngot), SILVER_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.silverNugget), SILVER_NUGGET_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianRing), VALYRIAN_NUGGET_BUY * 9), new GOTTradeEntry(new ItemStack(GOTRegistry.goldRing), GOLD_NUGGET_BUY * 9), new GOTTradeEntry(new ItemStack(GOTRegistry.silverRing), SILVER_NUGGET_BUY * 9), new GOTTradeEntry(new ItemStack(GOTRegistry.gobletGold), GOLD_INGOT_BUY * 2), new GOTTradeEntry(new ItemStack(GOTRegistry.gobletSilver), SILVER_INGOT_BUY * 2), new GOTTradeEntry(new ItemStack(GOTRegistry.chandelier, 1, 3), GOLD_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.chandelier, 1, 2), SILVER_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.birdCage, 1, 3), GOLD_INGOT_BUY * 6), new GOTTradeEntry(new ItemStack(GOTRegistry.birdCage, 1, 2), SILVER_INGOT_BUY * 6), new GOTTradeEntry(new ItemStack(GOTRegistry.goldBars), GOLD_INGOT_SELL), new GOTTradeEntry(new ItemStack(GOTRegistry.silverBars), SILVER_INGOT_SELL));
		COMMON_MAESTER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.writable_book, 1), 2), new GOTTradeEntry(new ItemStack(Items.paper, 2), 2), new GOTTradeEntry(new ItemStack(Items.saddle), 2), new GOTTradeEntry(new ItemStack(Items.flint_and_steel), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.bottlePoison), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.sulfurMatch), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPlantainBrew), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPoppyMilk), 12));
		COMMON_MINER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianIngot), VALYRIAN_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianNugget), VALYRIAN_NUGGET_BUY), new GOTTradeEntry(new ItemStack(Items.gold_ingot), GOLD_INGOT_BUY), new GOTTradeEntry(new ItemStack(Items.gold_nugget), GOLD_NUGGET_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.silverIngot), SILVER_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.silverNugget), SILVER_NUGGET_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.diamond), 30), new GOTTradeEntry(new ItemStack(GOTRegistry.emerald), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.sapphire), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.ruby), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.opal), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.amber), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.amethyst), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.topaz), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.pearl), 30));

		ASSHAI_ALCHEMIST_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.bottlePoison), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 1), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 2), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 3), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 4), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 5), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 6), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 8), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 9), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 10), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 12), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.lingeringPotion, 1, 13), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 1), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 2), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 3), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 4), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 5), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 6), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 8), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 9), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 10), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 12), 128), new GOTTradeEntry(new ItemStack(Items.potionitem, 1, 13), 128));
		BAELISH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.baelishDagger), 5000));
		CROWNLANDS_ALCHEMIST_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.wildFireJar), 128), new GOTTradeEntry(new ItemStack(GOTRegistry.firePot), 32), new GOTTradeEntry(new ItemStack(GOTRegistry.bomb), 64), new GOTTradeEntry(new ItemStack(GOTRegistry.bottlePoison), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.sulfurMatch), 1));
		DAVOS_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.fish), 5), new GOTTradeEntry(new ItemStack(Items.cooked_fished), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leek), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.salt), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leekCrop), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leekSoup), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.saltedFlesh), 5));
		ESSOS_BARTENDER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.cooked_beef), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.muttonCooked), 7), new GOTTradeEntry(new ItemStack(Items.cooked_porkchop), 7), new GOTTradeEntry(new ItemStack(Items.cooked_chicken), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.deerCooked), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitCooked), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitStew), 10), new GOTTradeEntry(new ItemStack(Items.cooked_fished), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.camelCooked), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.kebab), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.shishKebab), 8), new GOTTradeEntry(new ItemStack(Items.bread), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.oliveBread), 6), new GOTTradeEntry(new ItemStack(Items.baked_potato, 2), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.orange), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.plum), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.lemonCakeItem), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugOrangeJuice), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.ceramicPlate), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.woodPlate), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.mug), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.ceramicMug), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.gobletCopper), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.gobletWood), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.waterskin), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.mugAle, 1, 9999), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCider, 1, 9999), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugAraq, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugLemonLiqueur, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugLimeLiqueur, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCactusLiqueur, 1, 9999), 12));
		ESSOS_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.essosSword), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.essosDagger), 9), new GOTTradeEntry(new ItemStack(GOTRegistry.essosDaggerPoisoned), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.essosSpear), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.essosPike), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.essosPolearm), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.essosHammer), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.blacksmithHammer), 18), new GOTTradeEntry(new ItemStack(Blocks.iron_bars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeBars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.crossbowBolt, 4), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.ironCrossbow), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeCrossbow), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.essosHorseArmor), 25));
		ESSOS_FLORIST_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.essosFlower, 1, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.essosFlower, 1, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.essosFlower, 1, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.essosFlower, 1, 3), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 1, 3), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 0), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 1), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 2), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 3), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 4), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 1, 0), 25), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 0), 6), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 4), 10), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 5), 10), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 6), 10), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 7), 10), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 8), 6), new GOTTradeEntry(new ItemStack(Blocks.yellow_flower, 1, 8), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.bluebell, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.marigold, 1, 0), 10), new GOTTradeEntry(new ItemStack(Blocks.double_plant, 1, 0), 10), new GOTTradeEntry(new ItemStack(Blocks.double_plant, 1, 1), 15), new GOTTradeEntry(new ItemStack(Blocks.double_plant, 1, 4), 15), new GOTTradeEntry(new ItemStack(Blocks.double_plant, 1, 5), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 1, 1), 15));
		ESSOS_HUNTER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitRaw), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.deerRaw), 4), new GOTTradeEntry(new ItemStack(Items.leather), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.fur), 3), new GOTTradeEntry(new ItemStack(Items.feather), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.horn), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.lionFur), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.gemsbokHide), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.gemsbokHorn), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.rhinoHorn), 30), new GOTTradeEntry(new ItemStack(GOTRegistry.lionRaw), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.zebraRaw), 9), new GOTTradeEntry(new ItemStack(GOTRegistry.rhinoRaw), 12), new GOTTradeEntry(new ItemStack(Items.rotten_flesh), 3));
		ESSOS_LUMBERMAN_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Blocks.log, 1, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 0), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 0), 4), new GOTTradeEntry(new ItemStack(Blocks.log, 1, 2), 8), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 2), 8), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 2), 8), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 2), 16), new GOTTradeEntry(new ItemStack(Blocks.log, 1, 2), 4), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 2), 4), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 2), 4), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 2), 8), new GOTTradeEntry(new ItemStack(Blocks.log2, 1, 0), 6), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 4), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV2, 3, 0), 6), new GOTTradeEntry(new ItemStack(Blocks.leaves2, 1, 0), 6), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 4), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitWood, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 4), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamFruit, 3, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitLeaves, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitSapling, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitWood, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 5), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamFruit, 3, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitLeaves, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitSapling, 1, 1), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood2, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 9), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam2, 3, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves2, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling2, 1, 1), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood3, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 14), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam3, 3, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves3, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling3, 1, 2), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood4, 1, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam4, 3, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves4, 1, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling4, 1, 2), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 0), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 4), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 0), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 0), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 0), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 5), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 1), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 6), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 2), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 7), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 3), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 9), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 1), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 10), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 2), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 11), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 3), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood7, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 15), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam7, 3, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves7, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling7, 1, 3), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood8, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks3, 4, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam8, 3, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves8, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling8, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood8, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks3, 4, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam8, 3, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves8, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling8, 1, 3), 10), new GOTTradeEntry(new ItemStack(Items.stick, 4), 1));
		ESSOS_MASON_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Blocks.stone, 8), 2), new GOTTradeEntry(new ItemStack(Blocks.cobblestone, 8), 1), new GOTTradeEntry(new ItemStack(Blocks.stonebrick, 1, 8), 2), new GOTTradeEntry(new ItemStack(Blocks.hardened_clay, 8), 4), new GOTTradeEntry(new ItemStack(Blocks.sandstone, 8), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.redSandstone, 8), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.whiteSandstone, 8), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.brick1, 8, 15), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.brick3, 1, 8), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.pillar1, 4, 5), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.brick3, 8, 13), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.brick3, 1, 15), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.pillar1, 4, 15), 6));
		LHAZAR_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.tableLhazar), 100), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarSword), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarDagger), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarDaggerPoisoned), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarSpear), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarClub), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarHelmet), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarChestplate), 32), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarLeggings), 26), new GOTTradeEntry(new ItemStack(GOTRegistry.lhazarBoots), 17), new GOTTradeEntry(new ItemStack(GOTRegistry.blacksmithHammer), 18), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeBars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.crossbowBolt, 4), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeCrossbow), 12));
		QOHOR_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianSword), VALYRIAN_INGOT_BUY * 3), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianChestplate), VALYRIAN_INGOT_BUY * 4), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianBoots), VALYRIAN_INGOT_BUY * 2), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianLeggings), VALYRIAN_INGOT_BUY * 4), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianHelmet), VALYRIAN_INGOT_BUY * 3), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianDagger), VALYRIAN_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianHammer), VALYRIAN_INGOT_BUY * 4), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianSpear), VALYRIAN_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianBook), VALYRIAN_INGOT_BUY), new GOTTradeEntry(new ItemStack(GOTRegistry.valyrianDaggerPoisoned), VALYRIAN_INGOT_BUY));
		SOTHORYOS_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.tableSothoryos), 100), new GOTTradeEntry(new ItemStack(GOTRegistry.blacksmithHammer), 18), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosSword), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosDagger), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosSpear), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosBattleaxe), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosHammer), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosPike), 18), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosHelmet), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosChestplate), 32), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosLeggings), 25), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosBoots), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosHelmetChieftain), 40), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeBars, 8), 20));
		SOTHORYOS_SHAMAN_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosDagger), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.sothoryosDaggerPoisoned), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.sarbacane), 25), new GOTTradeEntry(new ItemStack(GOTRegistry.sarbacaneTrap, 4), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.dartPoisoned, 4), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.bottlePoison), 10), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 3), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 0), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugChocolate), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCocoa, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPoppyMilk), 20));
		SUMMER_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.tableSummer), 100), new GOTTradeEntry(new ItemStack(GOTRegistry.summerSword), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.summerDagger), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.summerDaggerPoisoned), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.summerSpear), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.summerPike), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.summerHelmet), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.summerChestplate), 32), new GOTTradeEntry(new ItemStack(GOTRegistry.summerLeggings), 26), new GOTTradeEntry(new ItemStack(GOTRegistry.summerBoots), 17), new GOTTradeEntry(new ItemStack(GOTRegistry.blacksmithHammer), 18), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeBars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.crossbowBolt, 4), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeCrossbow), 12)).setVessels(GOTFoods.ESSOS_DRINK);
		THENN_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.wildlingSword), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.wildlingDagger), 9), new GOTTradeEntry(new ItemStack(GOTRegistry.wildlingSpear), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.blacksmithHammer), 18), new GOTTradeEntry(new ItemStack(Blocks.iron_bars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeBars, 8), 20), new GOTTradeEntry(new ItemStack(Items.bow), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.crossbowBolt, 4), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.ironCrossbow), 15));
		WESTEROS_BARTENDER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.cooked_beef), 7), new GOTTradeEntry(new ItemStack(Items.cooked_porkchop), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.muttonCooked), 7), new GOTTradeEntry(new ItemStack(Items.cooked_chicken), 6), new GOTTradeEntry(new ItemStack(Items.bread), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.mug), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.ceramicMug), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.aleHorn), 5), new GOTTradeEntry(new ItemStack(Items.baked_potato, 2), 7), new GOTTradeEntry(new ItemStack(Items.cooked_fished), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.mugChocolate), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.mugAppleJuice), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.mugOrangeJuice), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.gammon), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.deerCooked), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitCooked), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitStew), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.plate), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.ceramicPlate), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.mugAle, 1, 9999), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugCider, 1, 9999), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPerry, 1, 9999), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugMead, 1, 9999), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugRedWine, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugWhiteWine, 1, 9999), 12));
		WESTEROS_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.westerosSword), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.westerosDagger), 9), new GOTTradeEntry(new ItemStack(GOTRegistry.westerosSpear), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.blacksmithHammer), 18), new GOTTradeEntry(new ItemStack(Blocks.iron_bars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeBars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.westerosHammer), 18), new GOTTradeEntry(new ItemStack(GOTRegistry.crossbowBolt, 4), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.ironCrossbow), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.westerosHorseArmor), 25));
		MOSSOVY_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.iron_sword), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.ironDagger), 9), new GOTTradeEntry(new ItemStack(GOTRegistry.ironSpear), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.blacksmithHammer), 18), new GOTTradeEntry(new ItemStack(Blocks.iron_bars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeBars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.crossbowBolt, 4), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.ironCrossbow), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.ironHorseArmor), 25));

		WESTEROS_FLORIST_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 0), 3), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 1), 8), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 2), 6), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 3), 3), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 4), 3), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 5), 3), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 6), 3), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 7), 3), new GOTTradeEntry(new ItemStack(Blocks.red_flower, 1, 8), 3), new GOTTradeEntry(new ItemStack(Blocks.yellow_flower, 1, 8), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.bluebell, 1, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.marigold, 1, 0), 3), new GOTTradeEntry(new ItemStack(Blocks.double_plant, 1, 0), 15), new GOTTradeEntry(new ItemStack(Blocks.double_plant, 1, 1), 8), new GOTTradeEntry(new ItemStack(Blocks.double_plant, 1, 4), 8), new GOTTradeEntry(new ItemStack(Blocks.double_plant, 1, 5), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 1, 1), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 0), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 1), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 2), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 3), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiFlower, 1, 4), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 1, 0), 25), new GOTTradeEntry(new ItemStack(GOTRegistry.essosFlower, 1, 0), 30), new GOTTradeEntry(new ItemStack(GOTRegistry.essosFlower, 1, 1), 30), new GOTTradeEntry(new ItemStack(GOTRegistry.essosFlower, 1, 2), 30), new GOTTradeEntry(new ItemStack(GOTRegistry.essosFlower, 1, 3), 30), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 1, 2), 45), new GOTTradeEntry(new ItemStack(GOTRegistry.doubleFlower, 1, 3), 45));
		WESTEROS_GREENGROCER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.melon), 2), new GOTTradeEntry(new ItemStack(Blocks.melon_block), 18), new GOTTradeEntry(new ItemStack(Items.apple), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.appleGreen), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.pear), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.cherry), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.lemon), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.orange), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.lime), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.plum), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.olive), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.almond), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.date), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.pomegranate), 5), new GOTTradeEntry(new ItemStack(Items.carrot), 3), new GOTTradeEntry(new ItemStack(Items.potato), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.lettuce), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.leek), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.turnip), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.corn), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.grapeRed), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.grapeWhite), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.raisins), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.blueberry), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.blackberry), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.cranberry), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.raspberry), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.elderberry), 2), new GOTTradeEntry(new ItemStack(Items.melon), 25));
		WESTEROS_LUMBERMAN_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Blocks.log, 1, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 0), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 0), 4), new GOTTradeEntry(new ItemStack(Blocks.log, 1, 1), 4), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 1), 4), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 1), 4), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 1), 8), new GOTTradeEntry(new ItemStack(Blocks.log, 1, 2), 3), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 2), 3), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 2), 3), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 2), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitWood, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 4), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamFruit, 3, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitLeaves, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitSapling, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitWood, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 5), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamFruit, 3, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitLeaves, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitSapling, 1, 1), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitWood, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 6), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamFruit, 3, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitLeaves, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitSapling, 1, 2), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.wood2, 1, 0), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 8), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam2, 3, 0), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves2, 1, 0), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling2, 1, 0), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.wood2, 1, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 9), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam2, 3, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves2, 1, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling2, 1, 1), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.wood2, 1, 2), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 10), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam2, 3, 2), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves2, 1, 2), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling2, 1, 2), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.wood3, 1, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 12), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam3, 3, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves3, 1, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling3, 1, 0), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood3, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 13), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam3, 3, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves3, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling3, 1, 1), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood3, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 14), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam3, 3, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves3, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling3, 1, 2), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.wood4, 1, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam4, 3, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves4, 1, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling4, 1, 0), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.wood4, 1, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam4, 3, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves4, 1, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling4, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood4, 1, 3), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 3), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam4, 3, 3), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves4, 1, 3), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling4, 1, 3), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 4), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 0), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 1), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 5), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 1), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 1), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 1), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 2), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 6), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 2), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 2), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 2), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 3), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 7), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 3), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 3), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 3), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 8), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 0), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 9), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 1), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 10), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 2), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 3), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 11), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 3), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 3), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 3), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.wood7, 1, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 12), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam7, 3, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves7, 1, 0), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling7, 1, 0), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.wood7, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 15), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam7, 3, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves7, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling7, 1, 3), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood8, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks3, 4, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam8, 3, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves8, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling8, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood8, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks3, 4, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam8, 3, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves8, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling8, 1, 3), 10), new GOTTradeEntry(new ItemStack(Items.stick, 4), 1));
		WESTEROS_MASON_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Blocks.stone, 8), 2), new GOTTradeEntry(new ItemStack(Blocks.cobblestone, 8), 1), new GOTTradeEntry(new ItemStack(Blocks.stonebrick, 1, 8), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.rock, 8, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.brick1, 8, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.brick1, 1, 5), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.brick5, 8, 8), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.pillar1, 4, 6), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.rock, 8, 0), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.brick2, 8, 11), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.brick4, 1, 6), 12), new GOTTradeEntry(new ItemStack(Blocks.hardened_clay, 8), 4), new GOTTradeEntry(new ItemStack(Blocks.sandstone, 8), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.redSandstone, 8), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.whiteSandstone, 8), 6));
		YITI_BARTENDER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.cooked_beef), 7), new GOTTradeEntry(new ItemStack(Items.cooked_porkchop), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.muttonCooked), 7), new GOTTradeEntry(new ItemStack(Items.cooked_chicken), 6), new GOTTradeEntry(new ItemStack(Items.bread), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.oliveBread), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.mug), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.ceramicMug), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.gobletCopper), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.gobletWood), 2), new GOTTradeEntry(new ItemStack(Items.baked_potato, 2), 7), new GOTTradeEntry(new ItemStack(Items.cooked_fished), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPomegranateJuice), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.deerCooked), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitCooked), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.ceramicPlate), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.woodPlate), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.mugAle, 1, 9999), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.mugRedWine, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugWhiteWine, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugPomegranateWine, 1, 9999), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.mugAraq, 1, 9999), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.mugSourMilk, 1, 9999), 8));
		YITI_BLACKSMITH_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.bomb), 64), new GOTTradeEntry(new ItemStack(GOTRegistry.tableYiTi), 100), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiSword), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiDagger), 9), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiSpear), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiPike), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiPolearm), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiBattleaxe), 18), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiHelmet), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiChestplate), 32), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiLeggings), 26), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiBoots), 17), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiHelmetFrontier), GOLD_INGOT_BUY * 2), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiChestplateFrontier), GOLD_INGOT_BUY * 4), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiLeggingsFrontier), GOLD_INGOT_BUY * 3), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiBootsFrontier), GOLD_INGOT_BUY * 2), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiHelmetSamurai), GOLD_INGOT_BUY * 5), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiChestplateSamurai), GOLD_INGOT_BUY * 8), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiLeggingsSamurai), GOLD_INGOT_BUY * 7), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiBootsSamurai), GOLD_INGOT_BUY * 4), new GOTTradeEntry(new ItemStack(GOTRegistry.blacksmithHammer), 18), new GOTTradeEntry(new ItemStack(Blocks.iron_bars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeBars, 8), 20), new GOTTradeEntry(new ItemStack(GOTRegistry.crossbowBolt, 4), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.ironCrossbow), 15), new GOTTradeEntry(new ItemStack(GOTRegistry.bronzeCrossbow), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.yitiHorseArmor), GOLD_INGOT_BUY * 6));
		YITI_HUNTER_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Items.beef), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.rabbitRaw), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.deerRaw), 4), new GOTTradeEntry(new ItemStack(Items.leather), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.fur), 3), new GOTTradeEntry(new ItemStack(Items.feather), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.horn), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.whiteBisonHorn), 50), new GOTTradeEntry(new ItemStack(Items.rotten_flesh), 3));
		YITI_LUMBERMAN_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(Blocks.log, 1, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 0), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 0), 2), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 0), 4), new GOTTradeEntry(new ItemStack(Blocks.log, 1, 1), 4), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 1), 4), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 1), 4), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 1), 8), new GOTTradeEntry(new ItemStack(Blocks.log, 1, 2), 3), new GOTTradeEntry(new ItemStack(Blocks.planks, 4, 2), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamV1, 3, 2), 3), new GOTTradeEntry(new ItemStack(Blocks.leaves, 1, 2), 3), new GOTTradeEntry(new ItemStack(Blocks.sapling, 1, 2), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitWood, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 4), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamFruit, 3, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitLeaves, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitSapling, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitWood, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 5), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamFruit, 3, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitLeaves, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitSapling, 1, 1), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitWood, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 6), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeamFruit, 3, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitLeaves, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.fruitSapling, 1, 2), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.wood2, 1, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 9), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam2, 3, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves2, 1, 1), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling2, 1, 1), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.wood3, 1, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 12), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam3, 3, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves3, 1, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling3, 1, 0), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood3, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 13), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam3, 3, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves3, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling3, 1, 1), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood3, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.planks1, 4, 14), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam3, 3, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves3, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling3, 1, 2), 16), new GOTTradeEntry(new ItemStack(GOTRegistry.wood4, 1, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam4, 3, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves4, 1, 2), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling4, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood4, 1, 3), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 3), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam4, 3, 3), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves4, 1, 3), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling4, 1, 3), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 4), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 0), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 0), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 1), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 5), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 1), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 1), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 1), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 2), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 6), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 2), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 2), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 2), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.wood5, 1, 3), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 7), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam5, 3, 3), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves5, 1, 3), 7), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling5, 1, 3), 14), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 9), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 1), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 1), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 10), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 2), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood6, 1, 3), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 11), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam6, 3, 3), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves6, 1, 3), 6), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling6, 1, 3), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.wood7, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks2, 4, 15), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam7, 3, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves7, 1, 3), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling7, 1, 3), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood8, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks3, 4, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam8, 3, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves8, 1, 0), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling8, 1, 0), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood8, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks3, 4, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam8, 3, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves8, 1, 1), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling8, 1, 1), 10), new GOTTradeEntry(new ItemStack(GOTRegistry.wood8, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.planks3, 4, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.woodBeam8, 3, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.leaves8, 1, 2), 5), new GOTTradeEntry(new ItemStack(GOTRegistry.sapling8, 1, 2), 10), new GOTTradeEntry(new ItemStack(Items.stick, 4), 1));
		YITI_MASON_BUY = new GOTTradeEntries(GOTTradeEntries.TradeType.BUY, new GOTTradeEntry(new ItemStack(GOTRegistry.tableYiTi), 100), new GOTTradeEntry(new ItemStack(Blocks.stone, 8), 2), new GOTTradeEntry(new ItemStack(Blocks.cobblestone, 8), 1), new GOTTradeEntry(new ItemStack(Blocks.stonebrick, 1, 8), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.brick5, 8, 11), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.brick5, 1, 12), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.brick5, 1, 15), 2), new GOTTradeEntry(new ItemStack(GOTRegistry.brick6, 1, 0), GOLD_NUGGET_BUY * 4), new GOTTradeEntry(new ItemStack(GOTRegistry.pillar2, 4, 8), 3), new GOTTradeEntry(new ItemStack(GOTRegistry.rock, 8, 4), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.brick6, 8, 1), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.brick6, 1, 2), 8), new GOTTradeEntry(new ItemStack(GOTRegistry.pillar2, 4, 9), 8), new GOTTradeEntry(new ItemStack(Blocks.hardened_clay, 8), 4), new GOTTradeEntry(new ItemStack(Blocks.sandstone, 8), 4), new GOTTradeEntry(new ItemStack(GOTRegistry.redSandstone, 8), 12), new GOTTradeEntry(new ItemStack(GOTRegistry.whiteSandstone, 8), 6));
	}

	public GOTTradeEntries.TradeType tradeType;
	public GOTTradeEntry[] tradeEntries;

	public GOTItemMug.Vessel[] drinkVessels;

	public GOTTradeEntries(GOTTradeEntries.TradeType t, GOTTradeEntry... trades) {
		tradeType = t;
		tradeEntries = trades;
	}

	public GOTTradeEntry[] getRandomTrades(Random random) {
		int numTrades = 3 + random.nextInt(3) + random.nextInt(3) + random.nextInt(3);
		if (numTrades > tradeEntries.length) {
			numTrades = tradeEntries.length;
		}

		GOTTradeEntry[] tempTrades = new GOTTradeEntry[tradeEntries.length];
		System.arraycopy(tradeEntries, 0, tempTrades, 0, tradeEntries.length);
		List<GOTTradeEntry> tempTradesAsList = Arrays.asList(tempTrades);
		Collections.shuffle(tempTradesAsList);
		tempTrades = tempTradesAsList.toArray(tempTrades);
		GOTTradeEntry[] trades = new GOTTradeEntry[numTrades];

		for (int i = 0; i < trades.length; ++i) {
			ItemStack tradeItem = tempTrades[i].createTradeItem();
			float tradeCost = tempTrades[i].getCost();
			int tradeCostI;
			if (tradeItem.getItem() instanceof GOTItemMug && ((GOTItemMug) tradeItem.getItem()).isBrewable && tradeItem.getItemDamage() == 9999) {
				tradeCostI = 1 + random.nextInt(3);
				tradeItem.setItemDamage(tradeCostI);
				tradeCost *= GOTItemMug.getFoodStrength(tradeItem);
			}

			if (drinkVessels != null && GOTItemMug.isItemFullDrink(tradeItem)) {
				GOTItemMug.Vessel v = drinkVessels[random.nextInt(drinkVessels.length)];
				GOTItemMug.setVessel(tradeItem, v, true);
				tradeCost += v.extraPrice;
			}

			if (GOTConfig.enchantingGOT && tradeType == GOTTradeEntries.TradeType.BUY) {
				boolean skilful = random.nextInt(3) == 0;
				GOTEnchantmentHelper.applyRandomEnchantments(tradeItem, random, skilful, false);
				tradeCost *= GOTEnchantmentHelper.calcTradeValueFactor(tradeItem);
			}

			tradeCost *= MathHelper.randomFloatClamp(random, 0.75F, 1.25F);
			tradeCost = Math.max(tradeCost, 1.0F);
			tradeCostI = Math.round(tradeCost);
			tradeCostI = Math.max(tradeCostI, 1);
			trades[i] = new GOTTradeEntry(tradeItem, tradeCostI);
		}

		return trades;
	}

	public GOTTradeEntries setVessels(GOTFoods foods) {
		return this.setVessels(foods.getDrinkVessels());
	}

	public GOTTradeEntries setVessels(GOTItemMug.Vessel... v) {
		if (tradeType != GOTTradeEntries.TradeType.BUY) {
			throw new IllegalArgumentException("Cannot set the vessel types for a sell list");
		}
		drinkVessels = v;
		return this;
	}

	public static GOTTradeSellResult getItemSellResult(ItemStack itemstack, GOTEntityNPC trader) {
		GOTTradeEntry[] sellTrades = trader.traderNPCInfo.getSellTrades();
		if (sellTrades != null) {
			for (int index = 0; index < sellTrades.length; ++index) {
				GOTTradeEntry trade = sellTrades[index];
				if (trade != null && trade.matches(itemstack)) {
					return new GOTTradeSellResult(index, trade, itemstack);
				}
			}
		}

		return null;
	}

	public enum TradeType {
		BUY, SELL;
	}
}
