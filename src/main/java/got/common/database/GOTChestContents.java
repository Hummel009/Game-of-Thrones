package got.common.database;

import java.util.*;

import cpw.mods.fml.common.FMLLog;
import got.common.*;
import got.common.enchant.GOTEnchantmentHelper;
import got.common.item.other.*;
import net.minecraft.init.*;
import net.minecraft.inventory.*;
import net.minecraft.item.*;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.*;
import net.minecraft.world.World;
import net.minecraftforge.common.ChestGenHooks;

public class GOTChestContents {
	public static GOTChestContents SOTHORYOS = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(Blocks.melon_block), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.melon), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.obsidianShard), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(Items.gold_nugget), 1, 8, 10), new WeightedRandomChestContent(new ItemStack(Items.gold_ingot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverNugget), 1, 8, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverIngot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.paper), 2, 8, 25), new WeightedRandomChestContent(new ItemStack(Items.bone), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(Items.feather), 1, 6, 50), new WeightedRandomChestContent(new ItemStack(Items.glass_bottle), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(Items.book), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.string), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.stick), 1, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.coal), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(Items.wheat), 1, 5, 25), new WeightedRandomChestContent(new ItemStack(Items.reeds), 1, 5, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.reeds), 1, 5, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.driedReeds), 2, 6, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mango), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.banana), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(Items.melon), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.melonSoup), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.bread), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bananaBread), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.cornBread), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.corn), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(GOTRegistry.cornCooked), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.cornStalk), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.potato), 1, 5, 100), new WeightedRandomChestContent(new ItemStack(Items.baked_potato), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_fished), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.woodPlate), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletGold), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.waterskin), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugMelonLiqueur), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugBananaBeer), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugCornLiquor), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugChocolate), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugCocoa), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugMangoJuice), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(Items.dye, 1, 3), 1, 8, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.sothoryosDagger), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.sothoryosDaggerPoisoned), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.sothoryosAxe), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.sarbacane), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.sarbacaneTrap), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.dartPoisoned), 1, 4, 25) }).setLore(20, GOTLore.LoreCategory.SOTHORYOS);
	public static GOTChestContents YI_TI = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(Blocks.melon_block), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.melon), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.paper), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.book), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.bucket), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.bone), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(Items.feather), 1, 2, 50), new WeightedRandomChestContent(new ItemStack(Items.leather), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverIngot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverNugget), 1, 6, 20), new WeightedRandomChestContent(new ItemStack(Items.gold_ingot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.gold_nugget), 1, 6, 20), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeIngot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.iron_ingot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiSteelIngot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.coal), 1, 3, 75), new WeightedRandomChestContent(new ItemStack(Items.string), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.wheat), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.bread), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(GOTRegistry.oliveBread), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.carrot), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.leek), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.turnip), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.turnipCooked), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.olive), 1, 5, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.date), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.raisins), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.pomegranate), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.reeds), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_fished), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.rabbitCooked), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerCooked), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeHoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeAxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeShovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironDagger), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeDagger), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiDagger), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiSword), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiBattleaxe), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiSpear), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiHelmet), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiChestplate), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiLeggings), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiBoots), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.leatherHat), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ceramicMug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.waterskin), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletGold), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletSilver), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(Items.glass_bottle), 1, 2, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugSourMilk), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(Items.milk_bucket), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugAle), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugAraq), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugPomegranateWine), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugPomegranateJuice), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugRedWine), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugWhiteWine), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugRedGrapeJuice), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugWhiteGrapeJuice), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.bow), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.yitiBow), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.arrow), 2, 8, 50) }).setLore(20, GOTLore.LoreCategory.YITI);
	public static GOTChestContents ESSOS = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(Blocks.melon_block), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.melon), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.essosSword), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.essosPolearm), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.essosDagger), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.essosSpear), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.essosBow), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(Items.arrow), 1, 6, 75), new WeightedRandomChestContent(new ItemStack(Items.paper), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.bucket), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.bone), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(Items.feather), 1, 2, 50), new WeightedRandomChestContent(new ItemStack(Items.leather), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverIngot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverNugget), 1, 6, 20), new WeightedRandomChestContent(new ItemStack(Items.gold_ingot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.gold_nugget), 1, 6, 20), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeIngot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.iron_ingot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.book), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.string), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.stick), 1, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.apple), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.bread), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.oliveBread), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.appleGreen), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.pear), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.date), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.lemon), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.lemonCakeItem), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.orange), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.lime), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.plum), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.olive), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.almond), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.marzipan), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.marzipanChocolate), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.carrot), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.potato), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(Items.baked_potato), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_porkchop), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_beef), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.muttonCooked), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerCooked), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.camelCooked), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_chicken), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_fished), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.kebab), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(GOTRegistry.shishKebab), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.lettuce), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(Items.coal), 1, 4, 75), new WeightedRandomChestContent(new ItemStack(Items.wheat), 1, 5, 100), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ceramicPlate), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.woodPlate), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ceramicMug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.waterskin), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletCopper), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletWood), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.glass_bottle), 1, 2, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugAraq), 1, 1, 75), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugCactusLiqueur), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugOrangeJuice), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugLemonade), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugLemonLiqueur), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugLimeLiqueur), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.dye, 1, 4), 1, 8, 25) }).setLore(20, GOTLore.LoreCategory.ESSOS);
	public static GOTChestContents BARROW = new GOTChestContents(4, 8, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(GOTRegistry.coin, 1, 0), 1, 20, 200), new WeightedRandomChestContent(new ItemStack(GOTRegistry.coin, 1, 1), 1, 8, 20), new WeightedRandomChestContent(new ItemStack(GOTRegistry.coin, 1, 2), 1, 2, 5), new WeightedRandomChestContent(new ItemStack(Items.gold_nugget), 1, 5, 100), new WeightedRandomChestContent(new ItemStack(Items.gold_ingot), 1, 4, 75), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverNugget), 1, 5, 100), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverIngot), 1, 4, 75), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeDagger), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeSword), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeHelmet), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeChestplate), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeLeggings), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeBoots), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironDagger), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.iron_sword), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.iron_helmet), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_chestplate), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_leggings), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_boots), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.goldRing), 1, 1, 20), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverRing), 1, 1, 20), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletGold), 1, 3, 20), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletSilver), 1, 3, 20), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletCopper), 1, 3, 20) });
	public static GOTChestContents ASSHAI = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(Items.stick), 8, 16, 100), new WeightedRandomChestContent(new ItemStack(Items.arrow), 2, 8, 100), new WeightedRandomChestContent(new ItemStack(Items.saddle), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(Items.gold_ingot), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.gold_nugget), 1, 8, 25), new WeightedRandomChestContent(new ItemStack(Blocks.dragon_egg), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.fur), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.valyrianNugget), 1, 1, 2), new WeightedRandomChestContent(new ItemStack(GOTRegistry.skullCup), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.waterskin), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.asshaiDagger), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.asshaiDaggerPoisoned), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.asshaiSword), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.asshaiBattleaxe), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.asshaiSpear), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.asshaiHammer), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.asshaiStaff), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bottlePoison), 8, 16, 100) }).setLore(20, GOTLore.LoreCategory.ASSHAI);
	public static GOTChestContents BEYOND_WALL = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(Items.bread), 1, 3, 75), new WeightedRandomChestContent(new ItemStack(Items.potato), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.apple), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.appleGreen), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerRaw), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.iron_sword), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.iron_axe), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironBattleaxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironDaggerPoisoned), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironPike), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironCrossbow), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironSpear), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironThrowingAxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeBattleaxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeAxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeSword), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeSpear), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeThrowingAxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerCooked), 1, 3, 50) });
	public static GOTChestContents IBBEN = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(Items.bread), 1, 3, 75), new WeightedRandomChestContent(new ItemStack(Items.potato), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.apple), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.appleGreen), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerRaw), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.iron_sword), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.iron_axe), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.stone_sword), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironBattleaxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironDaggerPoisoned), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironPike), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironCrossbow), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironSpear), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.stoneSpear), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironThrowingAxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerCooked), 1, 3, 50) });
	public static GOTChestContents WESTEROS = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(Items.leather), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(Items.iron_ingot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeIngot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverIngot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverNugget), 1, 6, 10), new WeightedRandomChestContent(new ItemStack(Items.gold_ingot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.gold_nugget), 1, 6, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverRing), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.coal), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.coal, 1, 1), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.flint), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.flint_and_steel), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.fishing_rod), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.string), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(Items.feather), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(Items.stick), 1, 8, 100), new WeightedRandomChestContent(new ItemStack(Items.book), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.paper), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(Items.wheat), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(Items.wheat_seeds), 1, 6, 25), new WeightedRandomChestContent(new ItemStack(Items.bread), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(GOTRegistry.oliveBread), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.potato), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.carrot), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.lettuce), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.leek), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.turnip), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.turnipCooked), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.apple), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.appleGreen), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.pear), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.plum), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.olive), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.almond), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.marzipan), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.marzipanChocolate), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_porkchop), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_fished), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_beef), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_chicken), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.muttonCooked), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.rabbitCooked), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerCooked), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeHoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeAxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeShovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.westerosDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.westerosSword), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.westerosSpear), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.westerosHammer), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.leatherHat), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ceramicMug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletWood), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletGold), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletSilver), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletCopper), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.aleHorn), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.aleHornGold), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugAle), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugCider), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugPerry), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugMead), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.bow), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.westerosBow), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.arrow), 2, 8, 100) }).setLore(20, GOTLore.LoreCategory.WESTEROS);
	public static GOTChestContents MOSSOVY = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(Items.leather), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(Items.iron_ingot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeIngot), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverIngot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverNugget), 1, 6, 10), new WeightedRandomChestContent(new ItemStack(Items.gold_ingot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.gold_nugget), 1, 6, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverRing), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.coal), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.coal, 1, 1), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(Items.flint), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.flint_and_steel), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.fishing_rod), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.string), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(Items.feather), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(Items.stick), 1, 8, 100), new WeightedRandomChestContent(new ItemStack(Items.book), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.paper), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(Items.wheat), 1, 4, 100), new WeightedRandomChestContent(new ItemStack(Items.wheat_seeds), 1, 6, 25), new WeightedRandomChestContent(new ItemStack(Items.bread), 1, 3, 100), new WeightedRandomChestContent(new ItemStack(GOTRegistry.oliveBread), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.potato), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.carrot), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.lettuce), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.leek), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.turnip), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.turnipCooked), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.apple), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.appleGreen), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.pear), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.plum), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.olive), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.almond), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.marzipan), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.marzipanChocolate), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_porkchop), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_fished), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_beef), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.cooked_chicken), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.muttonCooked), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.rabbitCooked), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerCooked), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeHoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_hoe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeAxe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_axe), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.iron_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeShovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.stone_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.wooden_shovel), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ironDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.bronzeDagger), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.leatherHat), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ceramicMug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletWood), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletGold), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletSilver), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletCopper), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.aleHorn), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.aleHornGold), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugAle), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugCider), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugPerry), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugMead), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(Items.bow), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(Items.arrow), 2, 8, 100) }).setLore(20, GOTLore.LoreCategory.ASSHAI);
	public static GOTChestContents NOMAD = new GOTChestContents(4, 6, new WeightedRandomChestContent[] { new WeightedRandomChestContent(new ItemStack(GOTRegistry.nomadSword), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.nomadBattleaxe), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.nomadSpear), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.nomadBow), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.driedReeds), 1, 6, 75), new WeightedRandomChestContent(new ItemStack(Items.arrow), 1, 6, 75), new WeightedRandomChestContent(new ItemStack(Items.paper), 2, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.bucket), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.bone), 1, 4, 25), new WeightedRandomChestContent(new ItemStack(Items.feather), 1, 2, 50), new WeightedRandomChestContent(new ItemStack(Items.leather), 1, 4, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverIngot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.silverNugget), 1, 6, 20), new WeightedRandomChestContent(new ItemStack(Items.gold_ingot), 1, 3, 10), new WeightedRandomChestContent(new ItemStack(Items.gold_nugget), 1, 6, 20), new WeightedRandomChestContent(new ItemStack(Items.string), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(Items.stick), 1, 8, 50), new WeightedRandomChestContent(new ItemStack(Items.apple), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.oliveBread), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.appleGreen), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.pear), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.date), 1, 3, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.orange), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.lime), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.plum), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.olive), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.almond), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_porkchop), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_beef), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.muttonCooked), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.deerCooked), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.camelCooked), 1, 2, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_chicken), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(Items.cooked_fished), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.woodPlate), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.ceramicMug), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletCopper), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.gobletWood), 1, 3, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugAraq), 1, 1, 75), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugCactusLiqueur), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugOrangeJuice), 1, 1, 50), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugLemonade), 1, 1, 10), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugLemonLiqueur), 1, 1, 25), new WeightedRandomChestContent(new ItemStack(GOTRegistry.mugLimeLiqueur), 1, 1, 25) });
	public WeightedRandomChestContent[] items;
	public int minItems;
	public int maxItems;
	public boolean pouches = false;
	public GOTItemMug.Vessel[] vesselTypes;
	public List<GOTLore.LoreCategory> loreCategories = new ArrayList<>();
	public int loreChance = 10;

	public GOTChestContents(int i, int j, WeightedRandomChestContent[] w) {
		minItems = i;
		maxItems = j;
		items = w;
	}

	public GOTChestContents enablePouches() {
		pouches = true;
		return this;
	}

	public ItemStack getOneItem(Random random, boolean isNPCDrop) {
		InventoryBasic drops = new InventoryBasic("oneItem", false, 1);
		GOTChestContents.fillInventory(drops, random, this, 1, isNPCDrop);
		ItemStack item = drops.getStackInSlot(0);
		item.stackSize = 1;
		return item;
	}

	public GOTChestContents setDrinkVessels(GOTFoods foods) {
		return this.setDrinkVessels(foods.getDrinkVessels());
	}

	public GOTChestContents setDrinkVessels(GOTItemMug.Vessel... v) {
		vesselTypes = v;
		return this;
	}

	public GOTChestContents setLore(int chance, GOTLore.LoreCategory... categories) {
		loreCategories = Arrays.asList(categories);
		loreChance = chance;
		return this;
	}

	public static void fillChest(World world, Random random, int i, int j, int k, GOTChestContents itemPool) {
		GOTChestContents.fillChest(world, random, i, j, k, itemPool, -1);
	}

	public static void fillChest(World world, Random random, int i, int j, int k, GOTChestContents itemPool, int amount) {
		TileEntity tileentity = world.getTileEntity(i, j, k);
		if (tileentity == null || !(tileentity instanceof IInventory)) {
			if (j >= 0 && j < 256) {
				FMLLog.warning("Warning: GOTChestContents attempted to fill a chest at " + i + ", " + j + ", " + k + " which does not exist");
			}
			return;
		}
		GOTChestContents.fillInventory((IInventory) tileentity, random, itemPool, amount);
	}

	public static void fillInventory(IInventory inventory, Random random, GOTChestContents itemPool, int amount) {
		GOTChestContents.fillInventory(inventory, random, itemPool, amount, false);
	}

	public static void fillInventory(IInventory inventory, Random random, GOTChestContents itemPool, int amount, boolean isNPCDrop) {
		if (amount == -1) {
			amount = GOTChestContents.getRandomItemAmount(itemPool, random);
		} else if (amount <= 0) {
			throw new IllegalArgumentException("GOTChestContents tried to fill a chest with " + amount + " items");
		}
		for (int i = 0; i < amount; ++i) {
			WeightedRandomChestContent weightedrandomchestcontent = (WeightedRandomChestContent) WeightedRandom.getRandomItem(random, itemPool.items);
			for (ItemStack itemstack : ChestGenHooks.generateStacks(random, weightedrandomchestcontent.theItemId, weightedrandomchestcontent.theMinimumChanceToGenerateItem, weightedrandomchestcontent.theMaximumChanceToGenerateItem)) {
				Item item;
				if (!isNPCDrop && itemPool.pouches) {
					if (random.nextInt(50) == 0) {
						itemstack = new ItemStack(GOTRegistry.pouch, 1, GOTItemPouch.getRandomPouchSize(random));
					} else if (random.nextInt(50) == 0) {
						itemstack = GOTItemModifierTemplate.getRandomCommonTemplate(random);
					}
				}
				if (!itemPool.loreCategories.isEmpty()) {
					GOTLore lore;
					int loreChance = itemPool.loreChance;
					int minDropLoreChance = 8;
					if (isNPCDrop && loreChance > minDropLoreChance) {
						loreChance = (int) (loreChance * 0.75f);
						loreChance = Math.max(loreChance, minDropLoreChance);
					}
					if (random.nextInt(loreChance = Math.max(loreChance, 1)) == 0 && (lore = GOTLore.getMultiRandomLore(itemPool.loreCategories, random, false)) != null) {
						itemstack = lore.createLoreBook(random);
					}
				}
				if (itemstack.isItemStackDamageable() && !itemstack.getHasSubtypes()) {
					itemstack.setItemDamage(MathHelper.floor_double(itemstack.getMaxDamage() * MathHelper.randomFloatClamp(random, 0.0f, 0.75f)));
				}
				if (itemstack.stackSize > itemstack.getMaxStackSize()) {
					itemstack.stackSize = itemstack.getMaxStackSize();
				}
				if (GOTConfig.isEnchantingGOT()) {
					boolean skilful = !isNPCDrop && random.nextInt(5) == 0;
					GOTEnchantmentHelper.applyRandomEnchantments(itemstack, random, skilful, false);
				}
				if ((item = itemstack.getItem()) instanceof GOTItemMug) {
					GOTItemMug.Vessel[] vessels;
					if (((GOTItemMug) item).isBrewable) {
						GOTItemMug.setStrengthMeta(itemstack, 1 + random.nextInt(3));
					}
					if (GOTItemMug.isItemFullDrink(itemstack) && (vessels = itemPool.vesselTypes) != null) {
						GOTItemMug.Vessel v = vessels[random.nextInt(vessels.length)];
						GOTItemMug.setVessel(itemstack, v, true);
					}
				}
				inventory.setInventorySlotContents(random.nextInt(inventory.getSizeInventory()), itemstack);
			}
		}
	}

	public static int getRandomItemAmount(GOTChestContents itemPool, Random random) {
		return MathHelper.getRandomIntegerInRange(random, itemPool.minItems, itemPool.maxItems);
	}
}
